[tool.poetry]
name = "Audiobooks"
version = "0.11.2"
description = "My audiobook library program."
authors = ["Robert Poulin <poulin.robert@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/RLPoulin/Audiobooks"

[tool.poetry.scripts]
audiobooks = "audiobooks.__main__:main"

[tool.poetry.dependencies]
python = "^3.11.5"
environs = "^10.3.0"
flask = "^2.3.3"
flask-caching = "^2.1.0"
flask-sqlalchemy = "^3.1.1"
greenlet = { version = "^3.0.3", allow-prereleases = true } # Temporary since 2.0 has no wheels.
rich = "^13.7.0"
sqlalchemy = "^2.0.23"
titlecase = "^2.4"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
commitizen = "^3.13.0"
pre-commit = "^3.6.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-flask = "^1.3.0"
pytest-flask-sqlalchemy = "^1.1.0"


[tool.black]
line-length = 88
target-version = ["py311", "py312"]
preview = true


[tool.commitizen]
name = "cz_conventional_commits"
version = "0.11.2"
version_files = ["pyproject.toml:version", "audiobooks/__init__.py"]
tag_format = "v$version"
update_changelog_on_bump = true
changelog_incremental = false


[tool.pytest.ini_options]
addopts = "--cov --cov-report=term --cov-report=html"
log_auto_indent = true
log_cli = true
log_cli_level = "WARNING"
testpaths = ["tests"]
usefixtures = ["app", "test_db"]


[tool.ruff]
extend-select = [
    "A",   # flake8-builtins
    "ANN", # flake8-annotations
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "C90", # mccabe
    "D",   # pydocstyle
    "DTZ", # flake8-datetimez
    "FBT", # flake8-boolean-trap
    "I",   # isort
    "ICN", # flake8-import-conventions
    "INT", # flake8-gettext
    "ISC", # flake8-implicit-str-concat
    "N",   # pep8-naming
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pytlint
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "RUF", # Ruff-specific rules
    "S",   # flake8-bandit
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "W",   # pycodestyle warnings
]
ignore = [
    "ANN101", # Missing type annotation for self in method
    "ANN003", # Missing type annotation for **kwargs
    "D105",   # Missing docstring in magic method
]
fixable = ["ALL"]
line-length = 88
output-format = "text"
target-version = "py311"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "F811", "PLR2004"]

[tool.ruff.flake8-annotations]
allow-star-arg-any = true
suppress-dummy-args = true

[tool.ruff.isort]
lines-after-imports = 2
relative-imports-order = "closest-to-furthest"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.pylint]
max-args = 8


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
